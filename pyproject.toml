[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nwb-lens"
version = "0.1.0"
description = "Interactive terminal-based NWB file explorer for debugging and exploration"
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
authors = [
    { name = "Heberto Mayorquin" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "textual>=0.45.0",
    "typer>=0.9.0",
    "pynwb>=2.5.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
inspector = [
    "nwbinspector>=0.4.0",
]


[project.scripts]
nwb-lens = "nwb_lens.cli:app"

[project.urls]
Homepage = "https://github.com/your-username/nwb-lens"
Repository = "https://github.com/your-username/nwb-lens"
Issues = "https://github.com/your-username/nwb-lens/issues"

[tool.black]
line-length = 88
target-version = ['py313']

[tool.ruff]
line-length = 88
target-version = "py313"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.uv.sources]
nwbinspector = { path = "../nwbinspector", editable = true }
neuroconv = { path = "../neuroconv", editable = true }
spikeinterface = { path = "../spikeinterface", editable = true }
roiextractors = { path = "../roiextractors", editable = true }
pynwb = { path = "../pynwb" }

[dependency-groups]
dev = [
    "neuroconv",
    "pytest>=8.4.1",
    "spikeinterface",
    "roiextractors",
    "numpy",
    "textual-dev>=1.7.0",
    "ndx-pose>=0.2.2",
]
